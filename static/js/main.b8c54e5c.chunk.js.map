{"version":3,"sources":["Components/Dashboard/TransactionHistory/transactionHistory.module.scss","Components/Dashboard/Controls/controls.module.scss","Components/Dashboard/Balance/balance.module.scss","Components/Dashboard/Controls/Controls.jsx","Utils/balanceCalculator.js","Components/Dashboard/Balance/Balance.jsx","Components/Dashboard/TransactionHistory/TransactionHistory.jsx","Utils/CheckCorrectInput.js","Components/Dashboard/Dashboard.jsx","Components/App.jsx","index.js"],"names":["module","exports","Controls","state","input","e","this","setState","target","value","createTransaction","props","className","css","controls","onSubmit","preventDefault","type","name","onChange","onInputChange","onClick","Component","transactions","reduce","balance","transaction","amount","Balance","balanceCalculator","TransactionHistory","length","history","map","id","date","key","noHistory","checkCorrectInput","inputVal","inputName","toast","warn","position","POSITION","BOTTOM_LEFT","error","Dashboard","Number","parentNode","reset","shortid","generate","Date","toLocaleString","prevState","success","presistedTransactions","localStorage","getItem","presistedBalance","JSON","parse","setItem","stringify","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8c54e5c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"noHistory\":\"transactionHistory_noHistory__thy22\",\"history\":\"transactionHistory_history__aSwaE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"controls_controls__1d9jr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"balance_balance__1iOlh\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport css from './controls.module.scss';\n\nclass Controls extends Component {\n  state = { input: '' };\n\n  static propTypes = {\n    createTransaction: PropTypes.func.isRequired,\n  };\n\n  onInputChange(e) {\n    this.setState({ input: e.target.value });\n  }\n\n  render() {\n    const { createTransaction } = this.props;\n    const { input } = this.state;\n    return (\n      <section className={css.controls}>\n        <form onSubmit={e => e.preventDefault()}>\n          <input\n            type=\"number\"\n            name=\"amount\"\n            onChange={e => this.onInputChange(e)}\n          />\n          <button\n            type=\"button\"\n            name=\"deposit\"\n            onClick={e => createTransaction(e.target, input)}\n          >\n            Deposit\n          </button>\n          <button\n            type=\"button\"\n            name=\"withdraw\"\n            onClick={e => createTransaction(e.target, input)}\n          >\n            Withdraw\n          </button>\n        </form>\n      </section>\n    );\n  }\n}\n\nexport default Controls;\n","/* eslint-disable no-param-reassign */\n/* eslint-disable no-return-assign */\n\nexport default (transactions, type) =>\n  transactions.reduce(\n    (balance, transaction) =>\n      (balance += transaction.type === type ? transaction.amount : 0),\n    0,\n  );\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport balanceCalculator from '../../../Utils/balanceCalculator';\nimport css from './balance.module.scss';\n\nconst Balance = ({ transactions, balance }) => (\n  <section className={css.balance}>\n    <span>⬆{balanceCalculator(transactions, 'deposit')}$</span>\n    <span>⬇{balanceCalculator(transactions, 'withdraw')}$</span>\n    <span>Balance: {balance}$</span>\n  </section>\n);\n\nBalance.propTypes = {\n  transactions: PropTypes.arrayOf(PropTypes.any).isRequired,\n  balance: PropTypes.number.isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport css from './transactionHistory.module.scss';\n\nconst TransactionHistory = ({ transactions }) =>\n  transactions.length > 0 ? (\n    <table className={css.history}>\n      <thead>\n        <tr>\n          <th>Transaction</th>\n          <th>Amount</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        {transactions.map(({ id, type, amount, date }) => (\n          <tr key={id}>\n            <td>{type}</td>\n            <td>{amount}$</td>\n            <td>{date}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  ) : (\n    <p className={css.noHistory}>No History Yet</p>\n  );\n\nTransactionHistory.propTypes = {\n  transactions: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default TransactionHistory;\n","import { toast } from 'react-toastify';\n\nconst checkCorrectInput = (inputVal, inputName, balance) => {\n  if (inputVal <= 0) {\n    toast.warn('Введено некорректное значение !', {\n      position: toast.POSITION.BOTTOM_LEFT,\n    });\n\n    return false;\n  }\n\n  if (balance < inputVal && inputName === 'withdraw') {\n    toast.error('Не достаточно средств на счету !', {\n      position: toast.POSITION.BOTTOM_LEFT,\n    });\n\n    return false;\n  }\n\n  return true;\n};\n\nexport default checkCorrectInput;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Controls from './Controls/Controls';\nimport Balance from './Balance/Balance';\nimport TaransactionHistory from './TransactionHistory/TransactionHistory';\nimport checkCorrectInput from '../../Utils/CheckCorrectInput';\n\nclass Dashboard extends Component {\n  state = {\n    transactions: [],\n    balance: 0,\n  };\n\n  componentDidMount() {\n    const presistedTransactions = localStorage.getItem('transactions');\n    const presistedBalance = localStorage.getItem('balance');\n\n    if (presistedTransactions) {\n      this.setState({\n        transactions: JSON.parse(presistedTransactions),\n        balance: JSON.parse(presistedBalance),\n      });\n    }\n  }\n\n  componentDidUpdate(prevState) {\n    const { transactions, balance } = this.state;\n    if (prevState.transactions !== transactions) {\n      localStorage.setItem('transactions', JSON.stringify(transactions));\n    }\n    if (prevState.balance !== balance) {\n      localStorage.setItem('balance', JSON.stringify(balance));\n    }\n  }\n\n  createTransaction = (target, input) => {\n    const { balance } = this.state;\n    const inputVal = Number(input);\n    target.parentNode.reset();\n    if (checkCorrectInput(inputVal, target.name, balance)) {\n      const transaction = {\n        id: shortid.generate(),\n        type: target.name,\n        amount: inputVal,\n        date: new Date().toLocaleString(),\n      };\n\n      this.setState(prevState => ({\n        transactions: [...prevState.transactions, transaction],\n        balance:\n          transaction.type === 'withdraw'\n            ? prevState.balance - inputVal\n            : prevState.balance + inputVal,\n      }));\n\n      if (transaction.type === 'withdraw') {\n        toast.success(`Успешно выведено ${inputVal}$!`, {\n          position: toast.POSITION.BOTTOM_LEFT,\n        });\n      } else {\n        toast.success(`Депозит успешно добавлен!`, {\n          position: toast.POSITION.BOTTOM_LEFT,\n        });\n      }\n    }\n  };\n\n  render() {\n    const { transactions, balance } = this.state;\n    return (\n      <div>\n        <Controls createTransaction={this.createTransaction} />\n        <Balance transactions={transactions} balance={balance} />\n        <TaransactionHistory transactions={transactions} />\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n","import React from 'react';\nimport Dashboard from './Dashboard/Dashboard';\n\nconst App = () => <Dashboard />;\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}